#
# Copyright 1999-2025 Alibaba Group Holding Ltd.
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#      http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.
#

# Common messages
nacos.api.auth.description=Get `accessToken` by `login` API.

# OpenAPI basic information
nacos.console.api.title=Nacos Console API
nacos.console.api.description=Nacos Console API openAPI(swagger) type document

# ConsoleServerStateController
nacos.console.state.api.controller.name=Nacos Console State APIs
nacos.console.state.api.controller.description=Retrieve the Nacos console's state, announcements, and guidance content.
nacos.console.state.api.state.summary=Get cluster status information
nacos.console.state.api.state.description=This interface retrieves the Nacos cluster's foundational status and configuration, such as version number, operational mode, and authentication status. It does not return node-level cluster details.
nacos.console.state.api.announcement.summary=Get console announcement information
nacos.console.state.api.announcement.description=This interface retrieves announcements to be displayed in the browser by the Nacos console. By default, the console UI calls this interface when authentication is not enabled to return a security warning.
nacos.console.state.api.announcement.example={"code":0,"message":"success","data":"Authentication has not been enabled in cluster, please refer to <a href=\\"https://nacos.io/en/docs/latest/manual/admin/auth/\\">Documentation</a> to enable~"}
nacos.console.state.api.guide.summary=Get console guidance content
nacos.console.state.api.guide.description=This interface retrieves guidance information for the Nacos console. The default console UI calls this interface when the console is disabled to fetch guidance content, as detailed in the console manual's "Disable Default Console" section.

# ConsoleHealthController
nacos.console.health.api.controller.name=Nacos Console Health Check APIs
nacos.console.health.api.controller.description=Routines to check the health status of the Nacos console.
nacos.console.health.api.liveness.summary=Get Nacos console liveness status
nacos.console.health.api.liveness.description=This interface checks if the Nacos console is operational and able to respond to requests.
nacos.console.health.api.readiness.summary=Get Nacos console readiness status
nacos.console.health.api.readiness.description=This interface checks if the Nacos console is ready to read data from the cluster.

# ConsoleClusterController
nacos.console.core.cluster.api.controller.name=Nacos Console Cluster APIs
nacos.console.core.cluster.api.controller.description=Routines to retrieve cluster information for the Nacos-controlled cluster.
nacos.console.core.cluster.api.nodes.summary=Get runtime information of Nacos nodes
nacos.console.core.cluster.api.nodes.description=This interface retrieves operational details of Nacos nodes, including node IP addresses, status, and metadata.

# ConsoleNamespaceController
nacos.console.core.namespace.api.controller.name=Nacos Console Namespace APIs
nacos.console.core.namespace.api.controller.description=Routines to manage namespaces in the Nacos console: list, retrieve, create, update, delete namespaces, and validate namespace IDs.
nacos.console.core.namespace.api.list.summary=List Nacos namespaces
nacos.console.core.namespace.api.list.description=Retrieves the list of namespaces in the current Nacos cluster.
nacos.console.core.namespace.api.get.summary=Get namespace details
nacos.console.core.namespace.api.get.description=Renders detailed information of a specific namespace.
nacos.console.core.namespace.api.create.summary=Create a new namespace
nacos.console.core.namespace.api.create.description=Creates a new namespace with a custom ID and metadata.
nacos.console.core.namespace.api.update.summary=Update a namespace
nacos.console.core.namespace.api.update.description=Updates non-ID attributes of a namespace (e.g., name, description). The namespace ID itself cannot be modified.
nacos.console.core.namespace.api.delete.summary=Delete a namespace
nacos.console.core.namespace.api.delete.description=Deletes a namespace. The default `public` namespace cannot be deleted.
nacos.console.core.namespace.api.check.summary=Validate namespace existence
nacos.console.core.namespace.api.check.description=Verifies if a namespace ID exists. This is used by the console during namespace creation to prevent ID conflicts.

#ConsoleConfigController
nacos.console.config.config.api.controller.name=Nacos Console Configuration Center APIs
nacos.console.config.config.api.controller.description=Nacos Console operations for the configuration center, including retrieving configuration lists, fetching configuration details, publishing configurations, deleting configurations, batch deletion, searching configurations, listening for configuration changes, exporting configurations, importing configurations, and more.
nacos.console.config.config.api.get.summary=Get Configuration Details
nacos.console.config.config.api.get.description=This interface retrieves the details of the specified configuration.
nacos.console.config.config.api.publish.summary=Publish Configuration
nacos.console.config.config.api.publish.description=This interface enables the creation of new configurations or updating existing ones.
nacos.console.config.config.api.delete.summary=Delete Configuration
nacos.console.config.config.api.delete.description=This interface deletes the specified configuration.
nacos.console.config.config.api.batchDelete.summary=Batch Delete Configurations
nacos.console.config.config.api.batchDelete.description=This interface allows for the deletion of multiple specified configurations.
nacos.console.config.config.api.list.summary=List Configurations
nacos.console.config.config.api.list.description=This interface retrieves the list of configurations under a specified namespace.
nacos.console.config.config.api.search.summary=Search Configurations by Content
nacos.console.config.config.api.search.description=This interface searches for configurations based on their content. **Note: This interface has lower performance; frequent use may cause stability issues. Use other interfaces whenever possible.**
nacos.console.config.config.api.listener.summary=List Configuration Listeners
nacos.console.config.config.api.listener.description=This interface retrieves the list of listeners subscribed to a specific configuration.
nacos.console.config.config.api.listener.ip.summary=Query Configurations Subscribed by an IP
nacos.console.config.config.api.listener.ip.description=This interface lists the configurations subscribed to by a specific client IP address.
nacos.console.config.config.api.export.summary=Export Configurations
nacos.console.config.config.api.export.description=This interface exports selected or queried configurations as a ZIP file for backup or migration to another Nacos cluster. ** Note: Use either ids or dataId + groupName combinations exclusively. Mixing parameters may result in an empty ZIP file. **
nacos.console.config.config.api.import.summary=Import Configurations
nacos.console.config.config.api.import.description=This interface imports configurations from a ZIP file (exported from Nacos) into a specified namespace. ** Note: The import interface currently supports ZIP files from older and newer export formats, but support for older formats will be deprecated. Use the new export interface for future compatibility.**
nacos.console.config.config.api.import.body.description=The zip file must be the one exported via the configuration export feature. If using a self-created zip file, its content structure **must exactly match** the format of the exported zip file. Any additional directories or hidden files may cause import failure.
nacos.console.config.config.api.clone.summary=Clone Configurations
nacos.console.config.config.api.clone.description=This interface clones selected or queried configurations into other namespaces.
nacos.console.config.config.api.delete.beta.summary=Terminate Configuration Beta Release Status
nacos.console.config.config.api.delete.beta.description=This interface stops a configuration's beta release by reverting its beta status. **Note: Only applicable if the configuration was marked for beta release with the betaIps header during publishing.**
nacos.console.config.config.api.get.beta.summary=Check Beta Release Status of a Configuration
nacos.console.config.config.api.get.beta.description=This interface checks whether a configuration is in a beta release state. **Note: Only valid for configurations marked as beta releases with the betaIps header during publishing.**

# ConsoleHistoryController
nacos.console.config.history.api.controller.name=Nacos Console Configuration History APIs
nacos.console.config.history.api.controller.description=Operations related to configuration history versions in the Nacos Console Configuration Center, including retrieving historical version lists, viewing details of historical versions, and more.
nacos.console.config.history.api.get.summary=Retrieve a Specific Configuration History Change Record
nacos.console.config.history.api.get.description=This interface retrieves a specific historical change record of a configuration.
nacos.console.config.history.api.list.summary=List Configuration Publish History
nacos.console.config.history.api.list.description=This interface retrieves the complete publish history of a configuration.
nacos.console.config.history.api.previous.summary=Retrieve Previous Change History Before the Latest Version
nacos.console.config.history.api.previous.description=This interface retrieves the most recent change history before the current latest version of the configuration.
nacos.console.config.history.api.names.summary=List Configurations Under a Namespace
nacos.console.config.history.api.names.description=This interface retrieves a list of configurations under a specified namespace, returning only `dataId` and `groupName` fields for use in UI dropdown menus.

# ConsoleServiceController
nacos.console.naming.service.api.controller.name=Nacos Console Naming Center Service APIs
nacos.console.naming.service.api.controller.description=Operations related to services in the Nacos Console Naming Center, including creating/deleting services, listing services, retrieving service details, querying service subscribers, and more.
nacos.console.naming.service.api.create.summary=Create a Service
nacos.console.naming.service.api.create.description=This interface creates an empty service.
nacos.console.naming.service.api.delete.summary=Delete a Service
nacos.console.naming.service.api.delete.description=This interface deletes a service. Note: This is service deletion, NOT instance deletion. A service cannot be deleted if it has existing service instances.
nacos.console.naming.service.api.update.summary=Update Service Metadata
nacos.console.naming.service.api.update.description=This interface updates metadata of a service (e.g., `metadata`, `selector`). Immutable fields include `serviceName`, `groupName`, and `namespaceId`.
nacos.console.naming.service.api.selector.summary=List Supported Service Selectors
nacos.console.naming.service.api.selector.description=This interface retrieves the list of supported service selectors to populate the dropdown in the console UI during service creation/update.
nacos.console.naming.service.api.subscribers.summary=List Service Subscribers
nacos.console.naming.service.api.subscribers.description=This interface retrieves the list of subscribers for a specified service.
nacos.console.naming.service.api.list.summary=List Services
nacos.console.naming.service.api.list.description=This interface retrieves the list of services under a specified namespace. The response format depends on the `withInstances` parameter:`withInstances=true`: Returns service details with instances (`ServiceDetailInfo` objects). `withInstances=false`: Returns service metadata without instances (`ServiceView` objects).
nacos.console.naming.service.api.get.summary=Retrieve Service Details
nacos.console.naming.service.api.get.description=This interface retrieves detailed information of a specified service, including metadata and configuration.
nacos.console.naming.service.api.update.cluster.summary=Update Service Cluster Metadata
nacos.console.naming.service.api.update.cluster.description=This interface updates metadata for a specific service cluster.

# ConsoleInstanceController
nacos.console.naming.instance.api.controller.name=Nacos Console Service Instance APIs
nacos.console.naming.instance.api.controller.description=Operations related to service instances in the Nacos Naming Center, including retrieving instance lists and updating instance metadata.
nacos.console.naming.instance.api.list.summary=List Service Instances
nacos.console.naming.instance.api.list.description=This interface retrieves the list of instances for a specified service.
nacos.console.naming.instance.api.update.summary=Update Instance Metadata
nacos.console.naming.instance.api.update.description=This interface updates metadata of specified service instances (e.g., `weight`, `enabled`). Unmodifiable fields include `serviceName`, `groupName`, `namespace`, `IP`, and `port`.
