#
# Copyright 1999-2025 Alibaba Group Holding Ltd.
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#      http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.
#

# Common messages
nacos.api.auth.description=传入通过`login`接口获得的`accessToken`

# OpenAPI basic information
nacos.console.api.title=Nacos控制台 API
nacos.console.api.description=Nacos控制台 API openAPI(swagger) 类型文档

# ConsoleServerStateController
nacos.console.state.api.controller.name=Nacos控制台状态相关API
nacos.console.state.api.controller.description=获取Nacos控制台的状态，公告和引导内容。
nacos.console.state.api.state.summary=获取集群状态信息
nacos.console.state.api.state.description=通过该接口，可以获取到Nacos 集群的基础状态和开关信息，例如：版本号，运行模式，鉴权是否开启等；该接口不会返回Nacos 集群的节点信息。
nacos.console.state.api.announcement.summary=获取控制台公告信息
nacos.console.state.api.announcement.description=通过该接口，可以获取到Nacos 控制台希望在浏览器中显示的公告信息。Nacos默认控制台UI会在未开启鉴权时调用此接口，返回集群未开启鉴权的提示。
nacos.console.state.api.announcement.example={"code":0,"message":"success","data":"当前集群没有开启鉴权，请参考<a href=\\"https://nacos.io/zh-cn/docs/v2/guide/user/auth.html\\">文档</a>开启鉴权~"}
nacos.console.state.api.guide.summary=获取控制台引导内容
nacos.console.state.api.guide.description=通过该接口，可以获取Nacos控制台的引导信息。Nacos默认控制台UI会在关闭Nacos控制台UI时调用，以获取引导信息，相关详情请参考控制台手册-关闭默认控制台。

# ConsoleHealthController
nacos.console.health.api.controller.name=Nacos控制台健康检查API
nacos.console.health.api.controller.description=获取Nacos控制台健康状态的API。
nacos.console.health.api.liveness.summary=获取Nacos控制台的存活状态
nacos.console.health.api.liveness.description=通过该接口，可以获取Nacos控制台的存活状态，Nacos控制台是否可正常接受和响应请求。
nacos.console.health.api.readiness.summary=获取Nacos控制台的可读状态
nacos.console.health.api.readiness.description=通过该接口，可以获取Nacos控制台的是否处于可读取状态，即Nacos控制台是否可以读取到数据。

# ConsoleClusterController
nacos.console.core.cluster.api.controller.name=Nacos控制台集群API
nacos.console.core.cluster.api.controller.description=获取Nacos控制台所对应的Nacos集群的集群信息
nacos.console.core.cluster.api.nodes.summary=获取Nacos节点运行信息
nacos.console.core.cluster.api.nodes.description=通过该接口，可以获取Nacos节点运行信息，包括节点ip，节点运行状态，节点元数据等。

# ConsoleNamespaceController
nacos.console.core.namespace.api.controller.name=Nacos控制台命名空间相关API
nacos.console.core.namespace.api.controller.description=Nacos控制台命名空间相关操作，获取命名空间列表，获取命名空间详情，创建命名空间，更新命名空间，删除命名空间，校验命名空间存在等。
nacos.console.core.namespace.api.list.summary=获取Nacos命名空间列表
nacos.console.core.namespace.api.list.description=通过该接口，可以获取当前Nacos集群的命名空间列表。
nacos.console.core.namespace.api.get.summary=获取命名空间详情
nacos.console.core.namespace.api.get.description=通过该接口，可以获取指定命名空间的详情。
nacos.console.core.namespace.api.create.summary=创建新命名空间
nacos.console.core.namespace.api.create.description=通过该接口，可以创建新的命名空间。
nacos.console.core.namespace.api.update.summary=更新命名空间
nacos.console.core.namespace.api.update.description=通过该接口，可以更新命名空间的信息，无法更新命名空间ID，仅能更新命名空间的名称和描述。
nacos.console.core.namespace.api.delete.summary=删除命名空间
nacos.console.core.namespace.api.delete.description=通过该接口，可以删除命名空间。默认命名空间`public`无法被删除。
nacos.console.core.namespace.api.check.summary=检查命名空间是否存在
nacos.console.core.namespace.api.check.description=通过该接口，可以检查命名空间ID是否存在。默认控制台ID将在创建命名空间前调用，确认自定义的命名空间ID是否已经存在，以防冲突。

#ConsoleConfigController
nacos.console.config.config.api.controller.name=Nacos控制台配置中心相关API
nacos.console.config.config.api.controller.description=Nacos控制台配置中心相关操作，获取配置列表，获取配置详情，发布配置，删除配置，批量删除配置，搜索配置，监听配置，导出配置，导入配置等。
nacos.console.config.config.api.get.summary=获取配置详情
nacos.console.config.config.api.get.description=通过该接口，可以获取指定配置的详情。
nacos.console.config.config.api.publish.summary=发布配置
nacos.console.config.config.api.publish.description=通过该接口，可以创建新的配置或更新已有配置。
nacos.console.config.config.api.delete.summary=删除配置
nacos.console.config.config.api.delete.description=通过该接口，可以删除指定配置。
nacos.console.config.config.api.batchDelete.summary=批量删除配置
nacos.console.config.config.api.batchDelete.description=通过该接口，可以批量删除指定配置。
nacos.console.config.config.api.list.summary=查询配置列表
nacos.console.config.config.api.list.description=通过该接口，可以查询指定命名空间下的配置列表。
nacos.console.config.config.api.search.summary=通过配置内容查询配置
nacos.console.config.config.api.search.description=通过该接口，可以通过配置内容查询对应配置的列表。**注意：此接口性能较低，过多调用容易造成稳定性问题，请尽量使用其他接口。**
nacos.console.config.config.api.listener.summary=查询配置的监听者列表
nacos.console.config.config.api.listener.description=通过该接口，可以查询指定配置的监听者列表。
nacos.console.config.config.api.listener.ip.summary=查询某个订阅者IP订阅了哪些配置
nacos.console.config.config.api.listener.ip.description=通过该接口，可以查询某个订阅者IP订阅了哪些配置。
nacos.console.config.config.api.export.summary=导出配置
nacos.console.config.config.api.export.description=通过该接口，可以将所选或所查询的配置，导出的配置为zip文件，进行备份或导入到其他Nacos集群。使用时建议分开使用 `ids` 和 `dataId + groupName` 的组合，只选择一种方式，另一类传入空字符串，否则可能导致导出文件为空内容。
nacos.console.config.config.api.import.summary=导入配置
nacos.console.config.config.api.import.description=通过该接口，可以将从Nacos导出的zip文件导入到Nacos的指定命名空间中。**注意：目前导入配置接口能够同时支持旧版本导出的zip文件和新版本导出的zip文件，但后续版本将会移除对旧版本格式导入导出配置的支持，建议使用新的导出配置 接口进行配置文件的导出。**
nacos.console.config.config.api.import.body.description=需要使用通过导出配置获取的`zip文件`，若使用自行创建的`zip文件`，请确定内容格式**必须**和通过导出配置获取的`zip文件`一致，不能有额外的目录结构和隐藏文件，否则会导入失败。
nacos.console.config.config.api.clone.summary=克隆配置
nacos.console.config.config.api.clone.description=通过该接口，可以将所选或所查询的配置克隆到其他命名空间。
nacos.console.config.config.api.delete.beta.summary=停止配置BETA发布
nacos.console.config.config.api.delete.beta.description=通过该接口，可以将配置从BETA发布状态停止，即回滚配置的Beta发布状态。**注意：只有在发布配置时设置了Header的betaIps后，将配置变更为BETA发布中的状态，调用此接口才能停止BETA发布状态。**
nacos.console.config.config.api.get.beta.summary=查询配置Beta发布状态
nacos.console.config.config.api.get.beta.description=通过该接口，可以查询配置的BETA发布状态。**注意：只有在发布配置时设置了Header的betaIps后，将配置变更为BETA发布中的状态，调用此接口才能停止BETA发布状态。**

# ConsoleHistoryController
nacos.console.config.history.api.controller.name=Nacos控制台配置历史相关API
nacos.console.config.history.api.controller.description=Nacos控制台配置中心的配置历史版本相关操作，包括获取配置历史版本列表，获取配置历史版本详情等。
nacos.console.config.history.api.get.summary=查询配置的某次历史变更记录
nacos.console.config.history.api.get.description=通过该接口，可以查询配置的某次历史变更记录。
nacos.console.config.history.api.list.summary=查询配置发布历史
nacos.console.config.history.api.list.description=通过该接口，可以查询配置的发布历史。
nacos.console.config.history.api.previous.summary=查询配置最新状态的前一次变更历史
nacos.console.config.history.api.previous.description=通过该接口，可以查询配置最新状态的前一次变更历史。
nacos.console.config.history.api.names.summary=查询命名空间下的配置列表
nacos.console.config.history.api.names.description=通过该接口，可以查询命名空间下的配置列表，仅查询`dataId`和`groupName`，用于配置历史UI的下拉选择。

# ConsoleServiceController
nacos.console.naming.service.api.controller.name=Nacos控制台注册中心服务相关API
nacos.console.naming.service.api.controller.description=Nacos控制台注册中心服务相关操作，包括创建服务，删除服务，查询服务列表，查询服务详情，查询服务订阅者列表等。
nacos.console.naming.service.api.create.summary=创建服务
nacos.console.naming.service.api.create.description=通过该接口，可以创建一个空服务。
nacos.console.naming.service.api.delete.summary=删除服务
nacos.console.naming.service.api.delete.description=通过该接口，可以删除一个服务。 **注意此接口为删除服务，而不是删除服务实例（服务提供者），且当服务下还有服务实例存在时，服务会无法删除。**
nacos.console.naming.service.api.update.summary=更新服务元数据
nacos.console.naming.service.api.update.description=通过该接口，可以更新一个服务的元数据。仅能更新服务的元数据，如`metadata`、`selector` 等。服务的`serviceName`、`groupName`、`namespaceId`等不能更新。
nacos.console.naming.service.api.selector.summary=获取支持的服务路由选择器类型列表
nacos.console.naming.service.api.selector.description=通过该接口，可以获取支持的服务路由选择器类型列表，用于控制台UI在创建和更新服务时，选择对应的路由选择器类型的下拉选择框。
nacos.console.naming.service.api.subscribers.summary=查询服务的订阅者列表
nacos.console.naming.service.api.subscribers.description=通过该接口，可以查询指定服务下的订阅者列表。
nacos.console.naming.service.api.list.summary=查询服务列表
nacos.console.naming.service.api.list.description=通过该接口，可以查询指定命名空间下的服务列表。基于参数`withInstances`的不同，接口的返回内容可能不同，参数为`true`时，返回的列表中包含服务实例，对象为`ServiceDetailInfo`；参数为`false`时，返回的列表中不包含服务实例，对象为`ServiceView`；
nacos.console.naming.service.api.get.summary=查询服务详情
nacos.console.naming.service.api.get.description=通过该接口，可以查询指定服务详情。
nacos.console.naming.service.api.update.cluster.summary=更新服务集群元数据
nacos.console.naming.service.api.update.cluster.description=通过该接口，可以更新指定服务集群的元数据。

# ConsoleInstanceController
nacos.console.naming.instance.api.controller.name=Nacos控制台注册中心服务实例相关API
nacos.console.naming.instance.api.controller.description=Nacos控制台注册中心服务实例相关操作，包括查询服务实例列表，更新服务实例元数据。
nacos.console.naming.instance.api.list.summary=查询服务的实例列表
nacos.console.naming.instance.api.list.description=通过该接口，可以查询指定服务的实例列表。
nacos.console.naming.instance.api.update.summary=更新实例元数据
nacos.console.naming.instance.api.update.description=通过该接口，可以更新指定服务的实例元数据，包括`权重(weight)`和`上下线状态(enabled)`；`无法更新实例的服务名(serviceName)`、`分组名(groupName)`、`命名空间(namespace)`、`IP`及`端口(port)`。
