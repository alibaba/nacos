// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: metadata.proto

package com.alibaba.nacos.istio.model.mcp;

/**
 * <pre>
 * Metadata information that all resources within the Mesh Configuration Protocol must have.
 * </pre>
 *
 * Protobuf type {@code istio.mcp.v1alpha1.Metadata}
 */
public  final class Metadata extends
    com.google.protobuf.GeneratedMessageV3 implements
    // @@protoc_insertion_point(message_implements:istio.mcp.v1alpha1.Metadata)
    MetadataOrBuilder {
private static final long serialVersionUID = 0L;
  // Use Metadata.newBuilder() to construct.
  private Metadata(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
    super(builder);
  }
  private Metadata() {
    name_ = "";
    version_ = "";
  }

  @java.lang.Override
  @SuppressWarnings({"unused"})
  protected java.lang.Object newInstance(
      UnusedPrivateParameter unused) {
    return new Metadata();
  }

  @java.lang.Override
  public final com.google.protobuf.UnknownFieldSet
  getUnknownFields() {
    return this.unknownFields;
  }
  private Metadata(
      com.google.protobuf.CodedInputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    this();
    if (extensionRegistry == null) {
      throw new java.lang.NullPointerException();
    }
    int mutable_bitField0_ = 0;
    com.google.protobuf.UnknownFieldSet.Builder unknownFields =
        com.google.protobuf.UnknownFieldSet.newBuilder();
    try {
      boolean done = false;
      while (!done) {
        int tag = input.readTag();
        switch (tag) {
          case 0:
            done = true;
            break;
          case 10: {
            java.lang.String s = input.readStringRequireUtf8();

            name_ = s;
            break;
          }
          case 18: {
            com.google.protobuf.Timestamp.Builder subBuilder = null;
            if (createTime_ != null) {
              subBuilder = createTime_.toBuilder();
            }
            createTime_ = input.readMessage(com.google.protobuf.Timestamp.parser(), extensionRegistry);
            if (subBuilder != null) {
              subBuilder.mergeFrom(createTime_);
              createTime_ = subBuilder.buildPartial();
            }

            break;
          }
          case 26: {
            java.lang.String s = input.readStringRequireUtf8();

            version_ = s;
            break;
          }
          case 34: {
            if (!((mutable_bitField0_ & 0x00000001) != 0)) {
              labels_ = com.google.protobuf.MapField.newMapField(
                  LabelsDefaultEntryHolder.defaultEntry);
              mutable_bitField0_ |= 0x00000001;
            }
            com.google.protobuf.MapEntry<java.lang.String, java.lang.String>
            labels__ = input.readMessage(
                LabelsDefaultEntryHolder.defaultEntry.getParserForType(), extensionRegistry);
            labels_.getMutableMap().put(
                labels__.getKey(), labels__.getValue());
            break;
          }
          case 42: {
            if (!((mutable_bitField0_ & 0x00000002) != 0)) {
              annotations_ = com.google.protobuf.MapField.newMapField(
                  AnnotationsDefaultEntryHolder.defaultEntry);
              mutable_bitField0_ |= 0x00000002;
            }
            com.google.protobuf.MapEntry<java.lang.String, java.lang.String>
            annotations__ = input.readMessage(
                AnnotationsDefaultEntryHolder.defaultEntry.getParserForType(), extensionRegistry);
            annotations_.getMutableMap().put(
                annotations__.getKey(), annotations__.getValue());
            break;
          }
          default: {
            if (!parseUnknownField(
                input, unknownFields, extensionRegistry, tag)) {
              done = true;
            }
            break;
          }
        }
      }
    } catch (com.google.protobuf.InvalidProtocolBufferException e) {
      throw e.setUnfinishedMessage(this);
    } catch (java.io.IOException e) {
      throw new com.google.protobuf.InvalidProtocolBufferException(
          e).setUnfinishedMessage(this);
    } finally {
      this.unknownFields = unknownFields.build();
      makeExtensionsImmutable();
    }
  }
  public static final com.google.protobuf.Descriptors.Descriptor
      getDescriptor() {
    return com.alibaba.nacos.istio.model.mcp.MetadataOuterClass.internal_static_istio_mcp_v1alpha1_Metadata_descriptor;
  }

  @SuppressWarnings({"rawtypes"})
  @java.lang.Override
  protected com.google.protobuf.MapField internalGetMapField(
      int number) {
    switch (number) {
      case 4:
        return internalGetLabels();
      case 5:
        return internalGetAnnotations();
      default:
        throw new RuntimeException(
            "Invalid map field number: " + number);
    }
  }
  @java.lang.Override
  protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internalGetFieldAccessorTable() {
    return com.alibaba.nacos.istio.model.mcp.MetadataOuterClass.internal_static_istio_mcp_v1alpha1_Metadata_fieldAccessorTable
        .ensureFieldAccessorsInitialized(
            com.alibaba.nacos.istio.model.mcp.Metadata.class, com.alibaba.nacos.istio.model.mcp.Metadata.Builder.class);
  }

  public static final int NAME_FIELD_NUMBER = 1;
  private volatile java.lang.Object name_;
  /**
   * <pre>
   * Fully qualified name of the resource. Unique in context of a collection.
   * The fully qualified name consists of a directory and basename. The directory identifies
   * the resources location in a resource hierarchy. The basename identifies the specific
   * resource name within the context of that directory.
   * The directory and basename are composed of one or more segments. Segments must be
   * valid [DNS labels](https://tools.ietf.org/html/rfc1123). "/" is the delimiter between
   * segments
   * The rightmost segment is the basename. All segments to the
   * left of the basename form the directory. Segments moving towards the left
   * represent higher positions in the resource hierarchy, similar to reverse
   * DNS notation. e.g.
   *    /&lt;org&gt;/&lt;team&gt;/&lt;subteam&gt;/&lt;resource basename&gt;
   * An empty directory indicates a resource that is located at the root of the
   * hierarchy, e.g.
   *    /&lt;globally scoped resource&gt;
   * On Kubernetes the resource hierarchy is two-levels: namespaces and
   * cluster-scoped (i.e. global).
   * Namespace resources fully qualified name is of the form:
   *    "&lt;k8s namespace&gt;/&lt;k8s resource name&gt;"
   * Cluster scoped resources are located at the root of the hierarchy and are of the form:
   *    "/&lt;k8s resource name&gt;"
   * </pre>
   *
   * <code>string name = 1;</code>
   * @return The name.
   */
  public java.lang.String getName() {
    java.lang.Object ref = name_;
    if (ref instanceof java.lang.String) {
      return (java.lang.String) ref;
    } else {
      com.google.protobuf.ByteString bs = 
          (com.google.protobuf.ByteString) ref;
      java.lang.String s = bs.toStringUtf8();
      name_ = s;
      return s;
    }
  }
  /**
   * <pre>
   * Fully qualified name of the resource. Unique in context of a collection.
   * The fully qualified name consists of a directory and basename. The directory identifies
   * the resources location in a resource hierarchy. The basename identifies the specific
   * resource name within the context of that directory.
   * The directory and basename are composed of one or more segments. Segments must be
   * valid [DNS labels](https://tools.ietf.org/html/rfc1123). "/" is the delimiter between
   * segments
   * The rightmost segment is the basename. All segments to the
   * left of the basename form the directory. Segments moving towards the left
   * represent higher positions in the resource hierarchy, similar to reverse
   * DNS notation. e.g.
   *    /&lt;org&gt;/&lt;team&gt;/&lt;subteam&gt;/&lt;resource basename&gt;
   * An empty directory indicates a resource that is located at the root of the
   * hierarchy, e.g.
   *    /&lt;globally scoped resource&gt;
   * On Kubernetes the resource hierarchy is two-levels: namespaces and
   * cluster-scoped (i.e. global).
   * Namespace resources fully qualified name is of the form:
   *    "&lt;k8s namespace&gt;/&lt;k8s resource name&gt;"
   * Cluster scoped resources are located at the root of the hierarchy and are of the form:
   *    "/&lt;k8s resource name&gt;"
   * </pre>
   *
   * <code>string name = 1;</code>
   * @return The bytes for name.
   */
  public com.google.protobuf.ByteString
      getNameBytes() {
    java.lang.Object ref = name_;
    if (ref instanceof java.lang.String) {
      com.google.protobuf.ByteString b = 
          com.google.protobuf.ByteString.copyFromUtf8(
              (java.lang.String) ref);
      name_ = b;
      return b;
    } else {
      return (com.google.protobuf.ByteString) ref;
    }
  }

  public static final int CREATE_TIME_FIELD_NUMBER = 2;
  private com.google.protobuf.Timestamp createTime_;
  /**
   * <pre>
   * The creation timestamp of the resource.
   * </pre>
   *
   * <code>.google.protobuf.Timestamp create_time = 2;</code>
   * @return Whether the createTime field is set.
   */
  public boolean hasCreateTime() {
    return createTime_ != null;
  }
  /**
   * <pre>
   * The creation timestamp of the resource.
   * </pre>
   *
   * <code>.google.protobuf.Timestamp create_time = 2;</code>
   * @return The createTime.
   */
  public com.google.protobuf.Timestamp getCreateTime() {
    return createTime_ == null ? com.google.protobuf.Timestamp.getDefaultInstance() : createTime_;
  }
  /**
   * <pre>
   * The creation timestamp of the resource.
   * </pre>
   *
   * <code>.google.protobuf.Timestamp create_time = 2;</code>
   */
  public com.google.protobuf.TimestampOrBuilder getCreateTimeOrBuilder() {
    return getCreateTime();
  }

  public static final int VERSION_FIELD_NUMBER = 3;
  private volatile java.lang.Object version_;
  /**
   * <pre>
   * Resource version. This is used to determine when resources change across
   * resource updates. It should be treated as opaque by consumers/sinks.
   * </pre>
   *
   * <code>string version = 3;</code>
   * @return The version.
   */
  public java.lang.String getVersion() {
    java.lang.Object ref = version_;
    if (ref instanceof java.lang.String) {
      return (java.lang.String) ref;
    } else {
      com.google.protobuf.ByteString bs = 
          (com.google.protobuf.ByteString) ref;
      java.lang.String s = bs.toStringUtf8();
      version_ = s;
      return s;
    }
  }
  /**
   * <pre>
   * Resource version. This is used to determine when resources change across
   * resource updates. It should be treated as opaque by consumers/sinks.
   * </pre>
   *
   * <code>string version = 3;</code>
   * @return The bytes for version.
   */
  public com.google.protobuf.ByteString
      getVersionBytes() {
    java.lang.Object ref = version_;
    if (ref instanceof java.lang.String) {
      com.google.protobuf.ByteString b = 
          com.google.protobuf.ByteString.copyFromUtf8(
              (java.lang.String) ref);
      version_ = b;
      return b;
    } else {
      return (com.google.protobuf.ByteString) ref;
    }
  }

  public static final int LABELS_FIELD_NUMBER = 4;
  private static final class LabelsDefaultEntryHolder {
    static final com.google.protobuf.MapEntry<
        java.lang.String, java.lang.String> defaultEntry =
            com.google.protobuf.MapEntry
            .<java.lang.String, java.lang.String>newDefaultInstance(
                com.alibaba.nacos.istio.model.mcp.MetadataOuterClass.internal_static_istio_mcp_v1alpha1_Metadata_LabelsEntry_descriptor, 
                com.google.protobuf.WireFormat.FieldType.STRING,
                "",
                com.google.protobuf.WireFormat.FieldType.STRING,
                "");
  }
  private com.google.protobuf.MapField<
      java.lang.String, java.lang.String> labels_;
  private com.google.protobuf.MapField<java.lang.String, java.lang.String>
  internalGetLabels() {
    if (labels_ == null) {
      return com.google.protobuf.MapField.emptyMapField(
          LabelsDefaultEntryHolder.defaultEntry);
    }
    return labels_;
  }

  public int getLabelsCount() {
    return internalGetLabels().getMap().size();
  }
  /**
   * <pre>
   * Map of string keys and values that can be used to organize and categorize
   * resources within a collection.
   * </pre>
   *
   * <code>map&lt;string, string&gt; labels = 4;</code>
   */

  public boolean containsLabels(
      java.lang.String key) {
    if (key == null) { throw new java.lang.NullPointerException(); }
    return internalGetLabels().getMap().containsKey(key);
  }
  /**
   * Use {@link #getLabelsMap()} instead.
   */
  @java.lang.Deprecated
  public java.util.Map<java.lang.String, java.lang.String> getLabels() {
    return getLabelsMap();
  }
  /**
   * <pre>
   * Map of string keys and values that can be used to organize and categorize
   * resources within a collection.
   * </pre>
   *
   * <code>map&lt;string, string&gt; labels = 4;</code>
   */

  public java.util.Map<java.lang.String, java.lang.String> getLabelsMap() {
    return internalGetLabels().getMap();
  }
  /**
   * <pre>
   * Map of string keys and values that can be used to organize and categorize
   * resources within a collection.
   * </pre>
   *
   * <code>map&lt;string, string&gt; labels = 4;</code>
   */

  public java.lang.String getLabelsOrDefault(
      java.lang.String key,
      java.lang.String defaultValue) {
    if (key == null) { throw new java.lang.NullPointerException(); }
    java.util.Map<java.lang.String, java.lang.String> map =
        internalGetLabels().getMap();
    return map.containsKey(key) ? map.get(key) : defaultValue;
  }
  /**
   * <pre>
   * Map of string keys and values that can be used to organize and categorize
   * resources within a collection.
   * </pre>
   *
   * <code>map&lt;string, string&gt; labels = 4;</code>
   */

  public java.lang.String getLabelsOrThrow(
      java.lang.String key) {
    if (key == null) { throw new java.lang.NullPointerException(); }
    java.util.Map<java.lang.String, java.lang.String> map =
        internalGetLabels().getMap();
    if (!map.containsKey(key)) {
      throw new java.lang.IllegalArgumentException();
    }
    return map.get(key);
  }

  public static final int ANNOTATIONS_FIELD_NUMBER = 5;
  private static final class AnnotationsDefaultEntryHolder {
    static final com.google.protobuf.MapEntry<
        java.lang.String, java.lang.String> defaultEntry =
            com.google.protobuf.MapEntry
            .<java.lang.String, java.lang.String>newDefaultInstance(
                com.alibaba.nacos.istio.model.mcp.MetadataOuterClass.internal_static_istio_mcp_v1alpha1_Metadata_AnnotationsEntry_descriptor, 
                com.google.protobuf.WireFormat.FieldType.STRING,
                "",
                com.google.protobuf.WireFormat.FieldType.STRING,
                "");
  }
  private com.google.protobuf.MapField<
      java.lang.String, java.lang.String> annotations_;
  private com.google.protobuf.MapField<java.lang.String, java.lang.String>
  internalGetAnnotations() {
    if (annotations_ == null) {
      return com.google.protobuf.MapField.emptyMapField(
          AnnotationsDefaultEntryHolder.defaultEntry);
    }
    return annotations_;
  }

  public int getAnnotationsCount() {
    return internalGetAnnotations().getMap().size();
  }
  /**
   * <pre>
   * Map of string keys and values that can be used by source and sink to communicate
   * arbitrary metadata about this resource.
   * </pre>
   *
   * <code>map&lt;string, string&gt; annotations = 5;</code>
   */

  public boolean containsAnnotations(
      java.lang.String key) {
    if (key == null) { throw new java.lang.NullPointerException(); }
    return internalGetAnnotations().getMap().containsKey(key);
  }
  /**
   * Use {@link #getAnnotationsMap()} instead.
   */
  @java.lang.Deprecated
  public java.util.Map<java.lang.String, java.lang.String> getAnnotations() {
    return getAnnotationsMap();
  }
  /**
   * <pre>
   * Map of string keys and values that can be used by source and sink to communicate
   * arbitrary metadata about this resource.
   * </pre>
   *
   * <code>map&lt;string, string&gt; annotations = 5;</code>
   */

  public java.util.Map<java.lang.String, java.lang.String> getAnnotationsMap() {
    return internalGetAnnotations().getMap();
  }
  /**
   * <pre>
   * Map of string keys and values that can be used by source and sink to communicate
   * arbitrary metadata about this resource.
   * </pre>
   *
   * <code>map&lt;string, string&gt; annotations = 5;</code>
   */

  public java.lang.String getAnnotationsOrDefault(
      java.lang.String key,
      java.lang.String defaultValue) {
    if (key == null) { throw new java.lang.NullPointerException(); }
    java.util.Map<java.lang.String, java.lang.String> map =
        internalGetAnnotations().getMap();
    return map.containsKey(key) ? map.get(key) : defaultValue;
  }
  /**
   * <pre>
   * Map of string keys and values that can be used by source and sink to communicate
   * arbitrary metadata about this resource.
   * </pre>
   *
   * <code>map&lt;string, string&gt; annotations = 5;</code>
   */

  public java.lang.String getAnnotationsOrThrow(
      java.lang.String key) {
    if (key == null) { throw new java.lang.NullPointerException(); }
    java.util.Map<java.lang.String, java.lang.String> map =
        internalGetAnnotations().getMap();
    if (!map.containsKey(key)) {
      throw new java.lang.IllegalArgumentException();
    }
    return map.get(key);
  }

  private byte memoizedIsInitialized = -1;
  @java.lang.Override
  public final boolean isInitialized() {
    byte isInitialized = memoizedIsInitialized;
    if (isInitialized == 1) return true;
    if (isInitialized == 0) return false;

    memoizedIsInitialized = 1;
    return true;
  }

  @java.lang.Override
  public void writeTo(com.google.protobuf.CodedOutputStream output)
                      throws java.io.IOException {
    if (!getNameBytes().isEmpty()) {
      com.google.protobuf.GeneratedMessageV3.writeString(output, 1, name_);
    }
    if (createTime_ != null) {
      output.writeMessage(2, getCreateTime());
    }
    if (!getVersionBytes().isEmpty()) {
      com.google.protobuf.GeneratedMessageV3.writeString(output, 3, version_);
    }
    com.google.protobuf.GeneratedMessageV3
      .serializeStringMapTo(
        output,
        internalGetLabels(),
        LabelsDefaultEntryHolder.defaultEntry,
        4);
    com.google.protobuf.GeneratedMessageV3
      .serializeStringMapTo(
        output,
        internalGetAnnotations(),
        AnnotationsDefaultEntryHolder.defaultEntry,
        5);
    unknownFields.writeTo(output);
  }

  @java.lang.Override
  public int getSerializedSize() {
    int size = memoizedSize;
    if (size != -1) return size;

    size = 0;
    if (!getNameBytes().isEmpty()) {
      size += com.google.protobuf.GeneratedMessageV3.computeStringSize(1, name_);
    }
    if (createTime_ != null) {
      size += com.google.protobuf.CodedOutputStream
        .computeMessageSize(2, getCreateTime());
    }
    if (!getVersionBytes().isEmpty()) {
      size += com.google.protobuf.GeneratedMessageV3.computeStringSize(3, version_);
    }
    for (java.util.Map.Entry<java.lang.String, java.lang.String> entry
         : internalGetLabels().getMap().entrySet()) {
      com.google.protobuf.MapEntry<java.lang.String, java.lang.String>
      labels__ = LabelsDefaultEntryHolder.defaultEntry.newBuilderForType()
          .setKey(entry.getKey())
          .setValue(entry.getValue())
          .build();
      size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(4, labels__);
    }
    for (java.util.Map.Entry<java.lang.String, java.lang.String> entry
         : internalGetAnnotations().getMap().entrySet()) {
      com.google.protobuf.MapEntry<java.lang.String, java.lang.String>
      annotations__ = AnnotationsDefaultEntryHolder.defaultEntry.newBuilderForType()
          .setKey(entry.getKey())
          .setValue(entry.getValue())
          .build();
      size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(5, annotations__);
    }
    size += unknownFields.getSerializedSize();
    memoizedSize = size;
    return size;
  }

  @java.lang.Override
  public boolean equals(final java.lang.Object obj) {
    if (obj == this) {
     return true;
    }
    if (!(obj instanceof com.alibaba.nacos.istio.model.mcp.Metadata)) {
      return super.equals(obj);
    }
    com.alibaba.nacos.istio.model.mcp.Metadata other = (com.alibaba.nacos.istio.model.mcp.Metadata) obj;

    if (!getName()
        .equals(other.getName())) return false;
    if (hasCreateTime() != other.hasCreateTime()) return false;
    if (hasCreateTime()) {
      if (!getCreateTime()
          .equals(other.getCreateTime())) return false;
    }
    if (!getVersion()
        .equals(other.getVersion())) return false;
    if (!internalGetLabels().equals(
        other.internalGetLabels())) return false;
    if (!internalGetAnnotations().equals(
        other.internalGetAnnotations())) return false;
    if (!unknownFields.equals(other.unknownFields)) return false;
    return true;
  }

  @java.lang.Override
  public int hashCode() {
    if (memoizedHashCode != 0) {
      return memoizedHashCode;
    }
    int hash = 41;
    hash = (19 * hash) + getDescriptor().hashCode();
    hash = (37 * hash) + NAME_FIELD_NUMBER;
    hash = (53 * hash) + getName().hashCode();
    if (hasCreateTime()) {
      hash = (37 * hash) + CREATE_TIME_FIELD_NUMBER;
      hash = (53 * hash) + getCreateTime().hashCode();
    }
    hash = (37 * hash) + VERSION_FIELD_NUMBER;
    hash = (53 * hash) + getVersion().hashCode();
    if (!internalGetLabels().getMap().isEmpty()) {
      hash = (37 * hash) + LABELS_FIELD_NUMBER;
      hash = (53 * hash) + internalGetLabels().hashCode();
    }
    if (!internalGetAnnotations().getMap().isEmpty()) {
      hash = (37 * hash) + ANNOTATIONS_FIELD_NUMBER;
      hash = (53 * hash) + internalGetAnnotations().hashCode();
    }
    hash = (29 * hash) + unknownFields.hashCode();
    memoizedHashCode = hash;
    return hash;
  }

  public static com.alibaba.nacos.istio.model.mcp.Metadata parseFrom(
      java.nio.ByteBuffer data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }
  public static com.alibaba.nacos.istio.model.mcp.Metadata parseFrom(
      java.nio.ByteBuffer data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }
  public static com.alibaba.nacos.istio.model.mcp.Metadata parseFrom(
      com.google.protobuf.ByteString data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }
  public static com.alibaba.nacos.istio.model.mcp.Metadata parseFrom(
      com.google.protobuf.ByteString data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }
  public static com.alibaba.nacos.istio.model.mcp.Metadata parseFrom(byte[] data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }
  public static com.alibaba.nacos.istio.model.mcp.Metadata parseFrom(
      byte[] data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }
  public static com.alibaba.nacos.istio.model.mcp.Metadata parseFrom(java.io.InputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input);
  }
  public static com.alibaba.nacos.istio.model.mcp.Metadata parseFrom(
      java.io.InputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input, extensionRegistry);
  }
  public static com.alibaba.nacos.istio.model.mcp.Metadata parseDelimitedFrom(java.io.InputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseDelimitedWithIOException(PARSER, input);
  }
  public static com.alibaba.nacos.istio.model.mcp.Metadata parseDelimitedFrom(
      java.io.InputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
  }
  public static com.alibaba.nacos.istio.model.mcp.Metadata parseFrom(
      com.google.protobuf.CodedInputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input);
  }
  public static com.alibaba.nacos.istio.model.mcp.Metadata parseFrom(
      com.google.protobuf.CodedInputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input, extensionRegistry);
  }

  @java.lang.Override
  public Builder newBuilderForType() { return newBuilder(); }
  public static Builder newBuilder() {
    return DEFAULT_INSTANCE.toBuilder();
  }
  public static Builder newBuilder(com.alibaba.nacos.istio.model.mcp.Metadata prototype) {
    return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
  }
  @java.lang.Override
  public Builder toBuilder() {
    return this == DEFAULT_INSTANCE
        ? new Builder() : new Builder().mergeFrom(this);
  }

  @java.lang.Override
  protected Builder newBuilderForType(
      com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
    Builder builder = new Builder(parent);
    return builder;
  }
  /**
   * <pre>
   * Metadata information that all resources within the Mesh Configuration Protocol must have.
   * </pre>
   *
   * Protobuf type {@code istio.mcp.v1alpha1.Metadata}
   */
  public static final class Builder extends
      com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
      // @@protoc_insertion_point(builder_implements:istio.mcp.v1alpha1.Metadata)
      com.alibaba.nacos.istio.model.mcp.MetadataOrBuilder {
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return com.alibaba.nacos.istio.model.mcp.MetadataOuterClass.internal_static_istio_mcp_v1alpha1_Metadata_descriptor;
    }

    @SuppressWarnings({"rawtypes"})
    protected com.google.protobuf.MapField internalGetMapField(
        int number) {
      switch (number) {
        case 4:
          return internalGetLabels();
        case 5:
          return internalGetAnnotations();
        default:
          throw new RuntimeException(
              "Invalid map field number: " + number);
      }
    }
    @SuppressWarnings({"rawtypes"})
    protected com.google.protobuf.MapField internalGetMutableMapField(
        int number) {
      switch (number) {
        case 4:
          return internalGetMutableLabels();
        case 5:
          return internalGetMutableAnnotations();
        default:
          throw new RuntimeException(
              "Invalid map field number: " + number);
      }
    }
    @java.lang.Override
    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return com.alibaba.nacos.istio.model.mcp.MetadataOuterClass.internal_static_istio_mcp_v1alpha1_Metadata_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              com.alibaba.nacos.istio.model.mcp.Metadata.class, com.alibaba.nacos.istio.model.mcp.Metadata.Builder.class);
    }

    // Construct using com.alibaba.nacos.istio.model.mcp.Metadata.newBuilder()
    private Builder() {
      maybeForceBuilderInitialization();
    }

    private Builder(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      super(parent);
      maybeForceBuilderInitialization();
    }
    private void maybeForceBuilderInitialization() {
      if (com.google.protobuf.GeneratedMessageV3
              .alwaysUseFieldBuilders) {
      }
    }
    @java.lang.Override
    public Builder clear() {
      super.clear();
      name_ = "";

      if (createTimeBuilder_ == null) {
        createTime_ = null;
      } else {
        createTime_ = null;
        createTimeBuilder_ = null;
      }
      version_ = "";

      internalGetMutableLabels().clear();
      internalGetMutableAnnotations().clear();
      return this;
    }

    @java.lang.Override
    public com.google.protobuf.Descriptors.Descriptor
        getDescriptorForType() {
      return com.alibaba.nacos.istio.model.mcp.MetadataOuterClass.internal_static_istio_mcp_v1alpha1_Metadata_descriptor;
    }

    @java.lang.Override
    public com.alibaba.nacos.istio.model.mcp.Metadata getDefaultInstanceForType() {
      return com.alibaba.nacos.istio.model.mcp.Metadata.getDefaultInstance();
    }

    @java.lang.Override
    public com.alibaba.nacos.istio.model.mcp.Metadata build() {
      com.alibaba.nacos.istio.model.mcp.Metadata result = buildPartial();
      if (!result.isInitialized()) {
        throw newUninitializedMessageException(result);
      }
      return result;
    }

    @java.lang.Override
    public com.alibaba.nacos.istio.model.mcp.Metadata buildPartial() {
      com.alibaba.nacos.istio.model.mcp.Metadata result = new com.alibaba.nacos.istio.model.mcp.Metadata(this);
      int from_bitField0_ = bitField0_;
      result.name_ = name_;
      if (createTimeBuilder_ == null) {
        result.createTime_ = createTime_;
      } else {
        result.createTime_ = createTimeBuilder_.build();
      }
      result.version_ = version_;
      result.labels_ = internalGetLabels();
      result.labels_.makeImmutable();
      result.annotations_ = internalGetAnnotations();
      result.annotations_.makeImmutable();
      onBuilt();
      return result;
    }

    @java.lang.Override
    public Builder clone() {
      return super.clone();
    }
    @java.lang.Override
    public Builder setField(
        com.google.protobuf.Descriptors.FieldDescriptor field,
        java.lang.Object value) {
      return super.setField(field, value);
    }
    @java.lang.Override
    public Builder clearField(
        com.google.protobuf.Descriptors.FieldDescriptor field) {
      return super.clearField(field);
    }
    @java.lang.Override
    public Builder clearOneof(
        com.google.protobuf.Descriptors.OneofDescriptor oneof) {
      return super.clearOneof(oneof);
    }
    @java.lang.Override
    public Builder setRepeatedField(
        com.google.protobuf.Descriptors.FieldDescriptor field,
        int index, java.lang.Object value) {
      return super.setRepeatedField(field, index, value);
    }
    @java.lang.Override
    public Builder addRepeatedField(
        com.google.protobuf.Descriptors.FieldDescriptor field,
        java.lang.Object value) {
      return super.addRepeatedField(field, value);
    }
    @java.lang.Override
    public Builder mergeFrom(com.google.protobuf.Message other) {
      if (other instanceof com.alibaba.nacos.istio.model.mcp.Metadata) {
        return mergeFrom((com.alibaba.nacos.istio.model.mcp.Metadata)other);
      } else {
        super.mergeFrom(other);
        return this;
      }
    }

    public Builder mergeFrom(com.alibaba.nacos.istio.model.mcp.Metadata other) {
      if (other == com.alibaba.nacos.istio.model.mcp.Metadata.getDefaultInstance()) return this;
      if (!other.getName().isEmpty()) {
        name_ = other.name_;
        onChanged();
      }
      if (other.hasCreateTime()) {
        mergeCreateTime(other.getCreateTime());
      }
      if (!other.getVersion().isEmpty()) {
        version_ = other.version_;
        onChanged();
      }
      internalGetMutableLabels().mergeFrom(
          other.internalGetLabels());
      internalGetMutableAnnotations().mergeFrom(
          other.internalGetAnnotations());
      this.mergeUnknownFields(other.unknownFields);
      onChanged();
      return this;
    }

    @java.lang.Override
    public final boolean isInitialized() {
      return true;
    }

    @java.lang.Override
    public Builder mergeFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      com.alibaba.nacos.istio.model.mcp.Metadata parsedMessage = null;
      try {
        parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        parsedMessage = (com.alibaba.nacos.istio.model.mcp.Metadata) e.getUnfinishedMessage();
        throw e.unwrapIOException();
      } finally {
        if (parsedMessage != null) {
          mergeFrom(parsedMessage);
        }
      }
      return this;
    }
    private int bitField0_;

    private java.lang.Object name_ = "";
    /**
     * <pre>
     * Fully qualified name of the resource. Unique in context of a collection.
     * The fully qualified name consists of a directory and basename. The directory identifies
     * the resources location in a resource hierarchy. The basename identifies the specific
     * resource name within the context of that directory.
     * The directory and basename are composed of one or more segments. Segments must be
     * valid [DNS labels](https://tools.ietf.org/html/rfc1123). "/" is the delimiter between
     * segments
     * The rightmost segment is the basename. All segments to the
     * left of the basename form the directory. Segments moving towards the left
     * represent higher positions in the resource hierarchy, similar to reverse
     * DNS notation. e.g.
     *    /&lt;org&gt;/&lt;team&gt;/&lt;subteam&gt;/&lt;resource basename&gt;
     * An empty directory indicates a resource that is located at the root of the
     * hierarchy, e.g.
     *    /&lt;globally scoped resource&gt;
     * On Kubernetes the resource hierarchy is two-levels: namespaces and
     * cluster-scoped (i.e. global).
     * Namespace resources fully qualified name is of the form:
     *    "&lt;k8s namespace&gt;/&lt;k8s resource name&gt;"
     * Cluster scoped resources are located at the root of the hierarchy and are of the form:
     *    "/&lt;k8s resource name&gt;"
     * </pre>
     *
     * <code>string name = 1;</code>
     * @return The name.
     */
    public java.lang.String getName() {
      java.lang.Object ref = name_;
      if (!(ref instanceof java.lang.String)) {
        com.google.protobuf.ByteString bs =
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        name_ = s;
        return s;
      } else {
        return (java.lang.String) ref;
      }
    }
    /**
     * <pre>
     * Fully qualified name of the resource. Unique in context of a collection.
     * The fully qualified name consists of a directory and basename. The directory identifies
     * the resources location in a resource hierarchy. The basename identifies the specific
     * resource name within the context of that directory.
     * The directory and basename are composed of one or more segments. Segments must be
     * valid [DNS labels](https://tools.ietf.org/html/rfc1123). "/" is the delimiter between
     * segments
     * The rightmost segment is the basename. All segments to the
     * left of the basename form the directory. Segments moving towards the left
     * represent higher positions in the resource hierarchy, similar to reverse
     * DNS notation. e.g.
     *    /&lt;org&gt;/&lt;team&gt;/&lt;subteam&gt;/&lt;resource basename&gt;
     * An empty directory indicates a resource that is located at the root of the
     * hierarchy, e.g.
     *    /&lt;globally scoped resource&gt;
     * On Kubernetes the resource hierarchy is two-levels: namespaces and
     * cluster-scoped (i.e. global).
     * Namespace resources fully qualified name is of the form:
     *    "&lt;k8s namespace&gt;/&lt;k8s resource name&gt;"
     * Cluster scoped resources are located at the root of the hierarchy and are of the form:
     *    "/&lt;k8s resource name&gt;"
     * </pre>
     *
     * <code>string name = 1;</code>
     * @return The bytes for name.
     */
    public com.google.protobuf.ByteString
        getNameBytes() {
      java.lang.Object ref = name_;
      if (ref instanceof String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        name_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }
    /**
     * <pre>
     * Fully qualified name of the resource. Unique in context of a collection.
     * The fully qualified name consists of a directory and basename. The directory identifies
     * the resources location in a resource hierarchy. The basename identifies the specific
     * resource name within the context of that directory.
     * The directory and basename are composed of one or more segments. Segments must be
     * valid [DNS labels](https://tools.ietf.org/html/rfc1123). "/" is the delimiter between
     * segments
     * The rightmost segment is the basename. All segments to the
     * left of the basename form the directory. Segments moving towards the left
     * represent higher positions in the resource hierarchy, similar to reverse
     * DNS notation. e.g.
     *    /&lt;org&gt;/&lt;team&gt;/&lt;subteam&gt;/&lt;resource basename&gt;
     * An empty directory indicates a resource that is located at the root of the
     * hierarchy, e.g.
     *    /&lt;globally scoped resource&gt;
     * On Kubernetes the resource hierarchy is two-levels: namespaces and
     * cluster-scoped (i.e. global).
     * Namespace resources fully qualified name is of the form:
     *    "&lt;k8s namespace&gt;/&lt;k8s resource name&gt;"
     * Cluster scoped resources are located at the root of the hierarchy and are of the form:
     *    "/&lt;k8s resource name&gt;"
     * </pre>
     *
     * <code>string name = 1;</code>
     * @param value The name to set.
     * @return This builder for chaining.
     */
    public Builder setName(
        java.lang.String value) {
      if (value == null) {
    throw new NullPointerException();
  }
  
      name_ = value;
      onChanged();
      return this;
    }
    /**
     * <pre>
     * Fully qualified name of the resource. Unique in context of a collection.
     * The fully qualified name consists of a directory and basename. The directory identifies
     * the resources location in a resource hierarchy. The basename identifies the specific
     * resource name within the context of that directory.
     * The directory and basename are composed of one or more segments. Segments must be
     * valid [DNS labels](https://tools.ietf.org/html/rfc1123). "/" is the delimiter between
     * segments
     * The rightmost segment is the basename. All segments to the
     * left of the basename form the directory. Segments moving towards the left
     * represent higher positions in the resource hierarchy, similar to reverse
     * DNS notation. e.g.
     *    /&lt;org&gt;/&lt;team&gt;/&lt;subteam&gt;/&lt;resource basename&gt;
     * An empty directory indicates a resource that is located at the root of the
     * hierarchy, e.g.
     *    /&lt;globally scoped resource&gt;
     * On Kubernetes the resource hierarchy is two-levels: namespaces and
     * cluster-scoped (i.e. global).
     * Namespace resources fully qualified name is of the form:
     *    "&lt;k8s namespace&gt;/&lt;k8s resource name&gt;"
     * Cluster scoped resources are located at the root of the hierarchy and are of the form:
     *    "/&lt;k8s resource name&gt;"
     * </pre>
     *
     * <code>string name = 1;</code>
     * @return This builder for chaining.
     */
    public Builder clearName() {
      
      name_ = getDefaultInstance().getName();
      onChanged();
      return this;
    }
    /**
     * <pre>
     * Fully qualified name of the resource. Unique in context of a collection.
     * The fully qualified name consists of a directory and basename. The directory identifies
     * the resources location in a resource hierarchy. The basename identifies the specific
     * resource name within the context of that directory.
     * The directory and basename are composed of one or more segments. Segments must be
     * valid [DNS labels](https://tools.ietf.org/html/rfc1123). "/" is the delimiter between
     * segments
     * The rightmost segment is the basename. All segments to the
     * left of the basename form the directory. Segments moving towards the left
     * represent higher positions in the resource hierarchy, similar to reverse
     * DNS notation. e.g.
     *    /&lt;org&gt;/&lt;team&gt;/&lt;subteam&gt;/&lt;resource basename&gt;
     * An empty directory indicates a resource that is located at the root of the
     * hierarchy, e.g.
     *    /&lt;globally scoped resource&gt;
     * On Kubernetes the resource hierarchy is two-levels: namespaces and
     * cluster-scoped (i.e. global).
     * Namespace resources fully qualified name is of the form:
     *    "&lt;k8s namespace&gt;/&lt;k8s resource name&gt;"
     * Cluster scoped resources are located at the root of the hierarchy and are of the form:
     *    "/&lt;k8s resource name&gt;"
     * </pre>
     *
     * <code>string name = 1;</code>
     * @param value The bytes for name to set.
     * @return This builder for chaining.
     */
    public Builder setNameBytes(
        com.google.protobuf.ByteString value) {
      if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
      
      name_ = value;
      onChanged();
      return this;
    }

    private com.google.protobuf.Timestamp createTime_;
    private com.google.protobuf.SingleFieldBuilderV3<
        com.google.protobuf.Timestamp, com.google.protobuf.Timestamp.Builder, com.google.protobuf.TimestampOrBuilder> createTimeBuilder_;
    /**
     * <pre>
     * The creation timestamp of the resource.
     * </pre>
     *
     * <code>.google.protobuf.Timestamp create_time = 2;</code>
     * @return Whether the createTime field is set.
     */
    public boolean hasCreateTime() {
      return createTimeBuilder_ != null || createTime_ != null;
    }
    /**
     * <pre>
     * The creation timestamp of the resource.
     * </pre>
     *
     * <code>.google.protobuf.Timestamp create_time = 2;</code>
     * @return The createTime.
     */
    public com.google.protobuf.Timestamp getCreateTime() {
      if (createTimeBuilder_ == null) {
        return createTime_ == null ? com.google.protobuf.Timestamp.getDefaultInstance() : createTime_;
      } else {
        return createTimeBuilder_.getMessage();
      }
    }
    /**
     * <pre>
     * The creation timestamp of the resource.
     * </pre>
     *
     * <code>.google.protobuf.Timestamp create_time = 2;</code>
     */
    public Builder setCreateTime(com.google.protobuf.Timestamp value) {
      if (createTimeBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        createTime_ = value;
        onChanged();
      } else {
        createTimeBuilder_.setMessage(value);
      }

      return this;
    }
    /**
     * <pre>
     * The creation timestamp of the resource.
     * </pre>
     *
     * <code>.google.protobuf.Timestamp create_time = 2;</code>
     */
    public Builder setCreateTime(
        com.google.protobuf.Timestamp.Builder builderForValue) {
      if (createTimeBuilder_ == null) {
        createTime_ = builderForValue.build();
        onChanged();
      } else {
        createTimeBuilder_.setMessage(builderForValue.build());
      }

      return this;
    }
    /**
     * <pre>
     * The creation timestamp of the resource.
     * </pre>
     *
     * <code>.google.protobuf.Timestamp create_time = 2;</code>
     */
    public Builder mergeCreateTime(com.google.protobuf.Timestamp value) {
      if (createTimeBuilder_ == null) {
        if (createTime_ != null) {
          createTime_ =
            com.google.protobuf.Timestamp.newBuilder(createTime_).mergeFrom(value).buildPartial();
        } else {
          createTime_ = value;
        }
        onChanged();
      } else {
        createTimeBuilder_.mergeFrom(value);
      }

      return this;
    }
    /**
     * <pre>
     * The creation timestamp of the resource.
     * </pre>
     *
     * <code>.google.protobuf.Timestamp create_time = 2;</code>
     */
    public Builder clearCreateTime() {
      if (createTimeBuilder_ == null) {
        createTime_ = null;
        onChanged();
      } else {
        createTime_ = null;
        createTimeBuilder_ = null;
      }

      return this;
    }
    /**
     * <pre>
     * The creation timestamp of the resource.
     * </pre>
     *
     * <code>.google.protobuf.Timestamp create_time = 2;</code>
     */
    public com.google.protobuf.Timestamp.Builder getCreateTimeBuilder() {
      
      onChanged();
      return getCreateTimeFieldBuilder().getBuilder();
    }
    /**
     * <pre>
     * The creation timestamp of the resource.
     * </pre>
     *
     * <code>.google.protobuf.Timestamp create_time = 2;</code>
     */
    public com.google.protobuf.TimestampOrBuilder getCreateTimeOrBuilder() {
      if (createTimeBuilder_ != null) {
        return createTimeBuilder_.getMessageOrBuilder();
      } else {
        return createTime_ == null ?
            com.google.protobuf.Timestamp.getDefaultInstance() : createTime_;
      }
    }
    /**
     * <pre>
     * The creation timestamp of the resource.
     * </pre>
     *
     * <code>.google.protobuf.Timestamp create_time = 2;</code>
     */
    private com.google.protobuf.SingleFieldBuilderV3<
        com.google.protobuf.Timestamp, com.google.protobuf.Timestamp.Builder, com.google.protobuf.TimestampOrBuilder> 
        getCreateTimeFieldBuilder() {
      if (createTimeBuilder_ == null) {
        createTimeBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
            com.google.protobuf.Timestamp, com.google.protobuf.Timestamp.Builder, com.google.protobuf.TimestampOrBuilder>(
                getCreateTime(),
                getParentForChildren(),
                isClean());
        createTime_ = null;
      }
      return createTimeBuilder_;
    }

    private java.lang.Object version_ = "";
    /**
     * <pre>
     * Resource version. This is used to determine when resources change across
     * resource updates. It should be treated as opaque by consumers/sinks.
     * </pre>
     *
     * <code>string version = 3;</code>
     * @return The version.
     */
    public java.lang.String getVersion() {
      java.lang.Object ref = version_;
      if (!(ref instanceof java.lang.String)) {
        com.google.protobuf.ByteString bs =
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        version_ = s;
        return s;
      } else {
        return (java.lang.String) ref;
      }
    }
    /**
     * <pre>
     * Resource version. This is used to determine when resources change across
     * resource updates. It should be treated as opaque by consumers/sinks.
     * </pre>
     *
     * <code>string version = 3;</code>
     * @return The bytes for version.
     */
    public com.google.protobuf.ByteString
        getVersionBytes() {
      java.lang.Object ref = version_;
      if (ref instanceof String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        version_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }
    /**
     * <pre>
     * Resource version. This is used to determine when resources change across
     * resource updates. It should be treated as opaque by consumers/sinks.
     * </pre>
     *
     * <code>string version = 3;</code>
     * @param value The version to set.
     * @return This builder for chaining.
     */
    public Builder setVersion(
        java.lang.String value) {
      if (value == null) {
    throw new NullPointerException();
  }
  
      version_ = value;
      onChanged();
      return this;
    }
    /**
     * <pre>
     * Resource version. This is used to determine when resources change across
     * resource updates. It should be treated as opaque by consumers/sinks.
     * </pre>
     *
     * <code>string version = 3;</code>
     * @return This builder for chaining.
     */
    public Builder clearVersion() {
      
      version_ = getDefaultInstance().getVersion();
      onChanged();
      return this;
    }
    /**
     * <pre>
     * Resource version. This is used to determine when resources change across
     * resource updates. It should be treated as opaque by consumers/sinks.
     * </pre>
     *
     * <code>string version = 3;</code>
     * @param value The bytes for version to set.
     * @return This builder for chaining.
     */
    public Builder setVersionBytes(
        com.google.protobuf.ByteString value) {
      if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
      
      version_ = value;
      onChanged();
      return this;
    }

    private com.google.protobuf.MapField<
        java.lang.String, java.lang.String> labels_;
    private com.google.protobuf.MapField<java.lang.String, java.lang.String>
    internalGetLabels() {
      if (labels_ == null) {
        return com.google.protobuf.MapField.emptyMapField(
            LabelsDefaultEntryHolder.defaultEntry);
      }
      return labels_;
    }
    private com.google.protobuf.MapField<java.lang.String, java.lang.String>
    internalGetMutableLabels() {
      onChanged();;
      if (labels_ == null) {
        labels_ = com.google.protobuf.MapField.newMapField(
            LabelsDefaultEntryHolder.defaultEntry);
      }
      if (!labels_.isMutable()) {
        labels_ = labels_.copy();
      }
      return labels_;
    }

    public int getLabelsCount() {
      return internalGetLabels().getMap().size();
    }
    /**
     * <pre>
     * Map of string keys and values that can be used to organize and categorize
     * resources within a collection.
     * </pre>
     *
     * <code>map&lt;string, string&gt; labels = 4;</code>
     */

    public boolean containsLabels(
        java.lang.String key) {
      if (key == null) { throw new java.lang.NullPointerException(); }
      return internalGetLabels().getMap().containsKey(key);
    }
    /**
     * Use {@link #getLabelsMap()} instead.
     */
    @java.lang.Deprecated
    public java.util.Map<java.lang.String, java.lang.String> getLabels() {
      return getLabelsMap();
    }
    /**
     * <pre>
     * Map of string keys and values that can be used to organize and categorize
     * resources within a collection.
     * </pre>
     *
     * <code>map&lt;string, string&gt; labels = 4;</code>
     */

    public java.util.Map<java.lang.String, java.lang.String> getLabelsMap() {
      return internalGetLabels().getMap();
    }
    /**
     * <pre>
     * Map of string keys and values that can be used to organize and categorize
     * resources within a collection.
     * </pre>
     *
     * <code>map&lt;string, string&gt; labels = 4;</code>
     */

    public java.lang.String getLabelsOrDefault(
        java.lang.String key,
        java.lang.String defaultValue) {
      if (key == null) { throw new java.lang.NullPointerException(); }
      java.util.Map<java.lang.String, java.lang.String> map =
          internalGetLabels().getMap();
      return map.containsKey(key) ? map.get(key) : defaultValue;
    }
    /**
     * <pre>
     * Map of string keys and values that can be used to organize and categorize
     * resources within a collection.
     * </pre>
     *
     * <code>map&lt;string, string&gt; labels = 4;</code>
     */

    public java.lang.String getLabelsOrThrow(
        java.lang.String key) {
      if (key == null) { throw new java.lang.NullPointerException(); }
      java.util.Map<java.lang.String, java.lang.String> map =
          internalGetLabels().getMap();
      if (!map.containsKey(key)) {
        throw new java.lang.IllegalArgumentException();
      }
      return map.get(key);
    }

    public Builder clearLabels() {
      internalGetMutableLabels().getMutableMap()
          .clear();
      return this;
    }
    /**
     * <pre>
     * Map of string keys and values that can be used to organize and categorize
     * resources within a collection.
     * </pre>
     *
     * <code>map&lt;string, string&gt; labels = 4;</code>
     */

    public Builder removeLabels(
        java.lang.String key) {
      if (key == null) { throw new java.lang.NullPointerException(); }
      internalGetMutableLabels().getMutableMap()
          .remove(key);
      return this;
    }
    /**
     * Use alternate mutation accessors instead.
     */
    @java.lang.Deprecated
    public java.util.Map<java.lang.String, java.lang.String>
    getMutableLabels() {
      return internalGetMutableLabels().getMutableMap();
    }
    /**
     * <pre>
     * Map of string keys and values that can be used to organize and categorize
     * resources within a collection.
     * </pre>
     *
     * <code>map&lt;string, string&gt; labels = 4;</code>
     */
    public Builder putLabels(
        java.lang.String key,
        java.lang.String value) {
      if (key == null) { throw new java.lang.NullPointerException(); }
      if (value == null) { throw new java.lang.NullPointerException(); }
      internalGetMutableLabels().getMutableMap()
          .put(key, value);
      return this;
    }
    /**
     * <pre>
     * Map of string keys and values that can be used to organize and categorize
     * resources within a collection.
     * </pre>
     *
     * <code>map&lt;string, string&gt; labels = 4;</code>
     */

    public Builder putAllLabels(
        java.util.Map<java.lang.String, java.lang.String> values) {
      internalGetMutableLabels().getMutableMap()
          .putAll(values);
      return this;
    }

    private com.google.protobuf.MapField<
        java.lang.String, java.lang.String> annotations_;
    private com.google.protobuf.MapField<java.lang.String, java.lang.String>
    internalGetAnnotations() {
      if (annotations_ == null) {
        return com.google.protobuf.MapField.emptyMapField(
            AnnotationsDefaultEntryHolder.defaultEntry);
      }
      return annotations_;
    }
    private com.google.protobuf.MapField<java.lang.String, java.lang.String>
    internalGetMutableAnnotations() {
      onChanged();;
      if (annotations_ == null) {
        annotations_ = com.google.protobuf.MapField.newMapField(
            AnnotationsDefaultEntryHolder.defaultEntry);
      }
      if (!annotations_.isMutable()) {
        annotations_ = annotations_.copy();
      }
      return annotations_;
    }

    public int getAnnotationsCount() {
      return internalGetAnnotations().getMap().size();
    }
    /**
     * <pre>
     * Map of string keys and values that can be used by source and sink to communicate
     * arbitrary metadata about this resource.
     * </pre>
     *
     * <code>map&lt;string, string&gt; annotations = 5;</code>
     */

    public boolean containsAnnotations(
        java.lang.String key) {
      if (key == null) { throw new java.lang.NullPointerException(); }
      return internalGetAnnotations().getMap().containsKey(key);
    }
    /**
     * Use {@link #getAnnotationsMap()} instead.
     */
    @java.lang.Deprecated
    public java.util.Map<java.lang.String, java.lang.String> getAnnotations() {
      return getAnnotationsMap();
    }
    /**
     * <pre>
     * Map of string keys and values that can be used by source and sink to communicate
     * arbitrary metadata about this resource.
     * </pre>
     *
     * <code>map&lt;string, string&gt; annotations = 5;</code>
     */

    public java.util.Map<java.lang.String, java.lang.String> getAnnotationsMap() {
      return internalGetAnnotations().getMap();
    }
    /**
     * <pre>
     * Map of string keys and values that can be used by source and sink to communicate
     * arbitrary metadata about this resource.
     * </pre>
     *
     * <code>map&lt;string, string&gt; annotations = 5;</code>
     */

    public java.lang.String getAnnotationsOrDefault(
        java.lang.String key,
        java.lang.String defaultValue) {
      if (key == null) { throw new java.lang.NullPointerException(); }
      java.util.Map<java.lang.String, java.lang.String> map =
          internalGetAnnotations().getMap();
      return map.containsKey(key) ? map.get(key) : defaultValue;
    }
    /**
     * <pre>
     * Map of string keys and values that can be used by source and sink to communicate
     * arbitrary metadata about this resource.
     * </pre>
     *
     * <code>map&lt;string, string&gt; annotations = 5;</code>
     */

    public java.lang.String getAnnotationsOrThrow(
        java.lang.String key) {
      if (key == null) { throw new java.lang.NullPointerException(); }
      java.util.Map<java.lang.String, java.lang.String> map =
          internalGetAnnotations().getMap();
      if (!map.containsKey(key)) {
        throw new java.lang.IllegalArgumentException();
      }
      return map.get(key);
    }

    public Builder clearAnnotations() {
      internalGetMutableAnnotations().getMutableMap()
          .clear();
      return this;
    }
    /**
     * <pre>
     * Map of string keys and values that can be used by source and sink to communicate
     * arbitrary metadata about this resource.
     * </pre>
     *
     * <code>map&lt;string, string&gt; annotations = 5;</code>
     */

    public Builder removeAnnotations(
        java.lang.String key) {
      if (key == null) { throw new java.lang.NullPointerException(); }
      internalGetMutableAnnotations().getMutableMap()
          .remove(key);
      return this;
    }
    /**
     * Use alternate mutation accessors instead.
     */
    @java.lang.Deprecated
    public java.util.Map<java.lang.String, java.lang.String>
    getMutableAnnotations() {
      return internalGetMutableAnnotations().getMutableMap();
    }
    /**
     * <pre>
     * Map of string keys and values that can be used by source and sink to communicate
     * arbitrary metadata about this resource.
     * </pre>
     *
     * <code>map&lt;string, string&gt; annotations = 5;</code>
     */
    public Builder putAnnotations(
        java.lang.String key,
        java.lang.String value) {
      if (key == null) { throw new java.lang.NullPointerException(); }
      if (value == null) { throw new java.lang.NullPointerException(); }
      internalGetMutableAnnotations().getMutableMap()
          .put(key, value);
      return this;
    }
    /**
     * <pre>
     * Map of string keys and values that can be used by source and sink to communicate
     * arbitrary metadata about this resource.
     * </pre>
     *
     * <code>map&lt;string, string&gt; annotations = 5;</code>
     */

    public Builder putAllAnnotations(
        java.util.Map<java.lang.String, java.lang.String> values) {
      internalGetMutableAnnotations().getMutableMap()
          .putAll(values);
      return this;
    }
    @java.lang.Override
    public final Builder setUnknownFields(
        final com.google.protobuf.UnknownFieldSet unknownFields) {
      return super.setUnknownFields(unknownFields);
    }

    @java.lang.Override
    public final Builder mergeUnknownFields(
        final com.google.protobuf.UnknownFieldSet unknownFields) {
      return super.mergeUnknownFields(unknownFields);
    }


    // @@protoc_insertion_point(builder_scope:istio.mcp.v1alpha1.Metadata)
  }

  // @@protoc_insertion_point(class_scope:istio.mcp.v1alpha1.Metadata)
  private static final com.alibaba.nacos.istio.model.mcp.Metadata DEFAULT_INSTANCE;
  static {
    DEFAULT_INSTANCE = new com.alibaba.nacos.istio.model.mcp.Metadata();
  }

  public static com.alibaba.nacos.istio.model.mcp.Metadata getDefaultInstance() {
    return DEFAULT_INSTANCE;
  }

  private static final com.google.protobuf.Parser<Metadata>
      PARSER = new com.google.protobuf.AbstractParser<Metadata>() {
    @java.lang.Override
    public Metadata parsePartialFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return new Metadata(input, extensionRegistry);
    }
  };

  public static com.google.protobuf.Parser<Metadata> parser() {
    return PARSER;
  }

  @java.lang.Override
  public com.google.protobuf.Parser<Metadata> getParserForType() {
    return PARSER;
  }

  @java.lang.Override
  public com.alibaba.nacos.istio.model.mcp.Metadata getDefaultInstanceForType() {
    return DEFAULT_INSTANCE;
  }

}

